
import numpy as np

def synchrotron(P, XI, wavelength, magneticField):
    """
    Calculates the synchrotron power at the given wavelength
    'wavelength' (which may be an array) on the given P/XI
    grid, with magnetic field strength 'magneticField'.

    P:             Momentum grid.
    XI:            Pitch grid.
    wavelength:    Wavelength(s) at which to evaluate the function.
    magneticField: Magnetic field strength.
    """
    c = 299792458
    e = 1.60217662e-19
    m = 9.10938356e-31
    eps0 = 8.854187817e-12
    B = magneticField

    gmm = np.sqrt(1 + P**2)
    gmmpar = np.divide(gmm, np.sqrt(1 + P**2 * (1 - XI**2)))

    lBLookUp, intLookUp = GetLookupTable()

    lowerBound = 4*np.pi/3 * c*m*np.divide(gmmpar, e*B*gmm**2)
    pf = 1/np.sqrt(3) * c*e**2 * np.divide(1, eps0*gmm**2)

    try: wavelength[0]
    except: wavelength = np.array([wavelength])

    s = 0
    for i in range(0, len(wavelength)):
        intK53 = np.power(10, np.interp(np.log10(lowerBound/wavelength[i]), lBLookUp, intLookUp))
        prefactor = pf / wavelength[i]**3
        s = s + prefactor * intK53

    return s

def GetLookupTable():
    lBLookup = np.array([
        -6.000000000000000, -5.836734693877551, -5.673469387755102, -5.510204081632653, -5.346938775510204,
        -5.183673469387755, -5.020408163265306, -4.857142857142858, -4.693877551020408, -4.530612244897959,
        -4.367346938775510, -4.204081632653061, -4.040816326530612, -3.877551020408163, -3.714285714285714,
        -3.551020408163265, -3.387755102040817, -3.224489795918367, -3.061224489795918, -2.897959183673469,
        -2.734693877551020, -2.571428571428572, -2.408163265306122, -2.244897959183673, -2.081632653061225,
        -1.918367346938775, -1.755102040816326, -1.591836734693878, -1.428571428571429, -1.265306122448980,
        -1.102040816326531, -0.938775510204081, -0.775510204081633, -0.612244897959184, -0.448979591836735,
        -0.285714285714286, -0.122448979591836, 0.040816326530612, 0.204081632653061, 0.367346938775510,
        0.530612244897959, 0.693877551020408, 0.857142857142857, 1.020408163265306, 1.183673469387755,
        1.346938775510204, 1.510204081632653, 1.673469387755102, 1.836734693877551, 2.000000000000000])

    intLookup = np.array([
        4.332306507591236, 4.223452531429022, 4.114595581696063, 4.005734811209318, 3.896869131331935,
        3.787997143100175, 3.679117048667274, 3.570226537415596, 3.461322639450533, 3.352401537069625,
        3.243458322041925, 3.134486682945749, 3.025478502115155, 2.916423335580212, 2.807307741236207,
        2.698114409641302, 2.588821037306935, 2.479398862661506, 2.369810757916434, 2.260008732677154,
        2.149930652562293, 2.039495901005069, 1.928599603509577, 1.817104873140658, 1.704832295876338,
        1.591545509901944, 1.476931172514143, 1.360570737756962, 1.241900105480748, 1.120151062268769,
        0.994265076008625, 0.862764772319786, 0.723560384647874, 0.573656419896563, 0.408706316122164,
        0.222338614659824, 0.005145959802919, -0.256813349793911, -0.584206297790505, -1.007591859847029,
        -1.571969326553784, -2.343311632609895, -3.417993705758430, -4.936475261893763, -7.103233595741016,
        -10.215841848083457, -14.707383123030544, -21.208278598380790, -30.636369276961265, -44.328124551687772])

    return lBLookup, intLookup
